[{"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\reportWebVitals.js":"1","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\App.js":"2","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\utils.js":"3","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Simulations.js":"4","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\index.js":"5","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Academic.js":"6","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Financing.js":"7","C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Management.js":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":979,"mtime":1606583907979,"results":"11","hashOfConfig":"10"},{"size":27953,"mtime":1609478582632,"results":"12","hashOfConfig":"10"},{"size":9889,"mtime":1607567613584,"results":"13","hashOfConfig":"10"},{"size":547,"mtime":1606361869531,"results":"14","hashOfConfig":"10"},{"size":84674,"mtime":1609813838139,"results":"15","hashOfConfig":"10"},{"size":74769,"mtime":1609814153072,"results":"16","hashOfConfig":"10"},{"size":44006,"mtime":1607384244104,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1cforyk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\reportWebVitals.js",[],["41","42"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\App.js",["43","44"],"import React, { Component, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\n\nimport Simulations from './components/Simulations';\nimport Academic from './components/Academic';\nimport Financing from './components/Financing';\nimport Management from './components/Management';\n// \"handsontable\": \"^8.2.0\",\n\nclass App extends Component {\n  render() { \n\n    return (\n      <div className=\"App\">\n\n           <BrowserRouter>\n                <div>\n                  {/* <Navbar /> */}\n                  <Switch>\n                    <Route path=\"/\" component={Simulations} exact/>\n                    <Route path=\"/academic\" component={Academic}/>\n                    <Route path=\"/financing\" component={Financing}/>\n                    <Route path=\"/management\" component={Management}/>\n                  </Switch>\n                </div> \n            </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["45","46"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\utils.js",["47"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Simulations.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport '../App.css';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nlet simulation_type = \"\";\r\n\r\nlet num_prof = 0;\r\n\r\nlet account_info = [[\"Professor\", \"professor\"], [\"TA1\", \"ta1\"], [\"TA2\", \"ta2\"], [\"Family1\", \"family1\"], [\"Family2\", \"family2\"], [\"Family3\", \"family3\"]];\r\n\r\nclass Simulation extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      rows: [],\r\n      cols: [],\r\n      attri: [],\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      redirect_academic_page: false,\r\n      academic_page_link: '/academic',\r\n\r\n      redirect_management_page: false,\r\n      management_page_link: '/management',\r\n\r\n      redirect_financing_page: false,\r\n      financing_page_link: '/financing',\r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: false, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      isConflictModalOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      isLoginModalOpen: true, \r\n      username: \"\", \r\n      password: \"\", \r\n      isLoginRejectOpen: false\r\n    }\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleLoginModal = this.toggleLoginModal.bind();\r\n    this.toggleLoginRejectModal = this.toggleLoginRejectModal.bind();\r\n  }\r\n  \r\n  toggleLoginRejectModal = () => {\r\n    this.setState({\r\n      isLoginRejectOpen: !this.state.isLoginRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleLoginModal = () => {\r\n    this.setState({\r\n      isLoginModalOpen: !this.state.isLoginModalOpen\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    e.preventDefault();\r\n    simulation_type = e.target.name;\r\n    if (simulation_type === \"academic\") {\r\n      this.setState({\r\n        redirect_academic_page: true\r\n      })\r\n    }\r\n    if (simulation_type === \"management\") {\r\n      this.setState({\r\n        redirect_management_page: true\r\n      })\r\n    }\r\n    if (simulation_type === \"financing\") {\r\n      this.setState({\r\n        redirect_financing_page: true\r\n      })\r\n    }\r\n  }\r\n\r\n  handleLoginChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onLoginFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    let username = this.state.username;\r\n    let password = this.state.password;\r\n\r\n    let account_found = false;\r\n    for (var i = 0; i < account_info.length; i++) {\r\n      if (username === account_info[i][0] && password === account_info[i][1]) {\r\n        account_found = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // login success\r\n    if (account_found) {\r\n      if (username === \"Professor\" || username === \"TA1\" || username === \"TA2\") {\r\n        if (username === \"Professor\") {\r\n          num_prof++;\r\n        }\r\n        console.log(\"number of prof is: \", num_prof);\r\n        this.setState({\r\n          redirect_academic_page: true\r\n        });\r\n      } \r\n      else if (username === \"Family1\" || username === \"Family2\" || username === \"Family3\") {\r\n        this.setState({\r\n          redirect_financing_page: true\r\n        });\r\n      }\r\n    } \r\n    \r\n    // reject login\r\n    else {\r\n      if (this.state.isLoginRejectOpen === false) {\r\n        this.toggleLoginRejectModal();\r\n      }\r\n      this.toggleLoginModal();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.redirect_import_page) {\r\n      return <Redirect to={this.state.import_page_link} />\r\n    }\r\n    if (this.state.redirect_academic_page) {\r\n      return <Redirect to={this.state.academic_page_link} />\r\n    }\r\n    if (this.state.redirect_management_page) {\r\n      return <Redirect to={this.state.management_page_link} />\r\n    }\r\n    if (this.state.redirect_financing_page) {\r\n      return <Redirect to={this.state.financing_page_link} />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n          </Jumbotron >\r\n          <div>\r\n          <Jumbotron >                \r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to spreadsheet web!</h1>\r\n                  <p className=\"lead\">Please click the login button below and enter your assigned username and password</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>{this.state.user_text_block}</p>\r\n                  <p className=\"lead\">\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleLoginModal} >Login</Button>\r\n                  </p>\r\n\r\n                  <Modal isOpen={this.state.isLoginRejectOpen} toggle={this.toggleLoginRejectModal}>\r\n                    <ModalHeader toggle={this.toggleLoginRejectModal}>Login Fail</ModalHeader>\r\n                    <ModalBody>\r\n                      Sorry, the username and password you entered do not match. Please try again!\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.toggleLoginModal}>\r\n                          Try again\r\n                        </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal isOpen={this.state.isLoginModalOpen} toggle={this.toggleLoginModal} >\r\n                    <ModalHeader toggle={this.toggleLoginModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.onLoginFormSubmit}>\r\n                        <FormGroup>\r\n                          <Label for=\"username\">Please enter your username</Label>\r\n                          <Input type=\"text\" name=\"username\" id=\"username\" onChange={e => this.handleLoginChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"password\">Please enter your password</Label>\r\n                          <Input type=\"text\" name=\"password\" id=\"password\" onChange={e => this.handleLoginChange(e)} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Login</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        Forgot your userID? Well, check the document we sent you...\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                  \r\n\r\n                  <Modal size='lg' isOpen={this.state.isSelectPromptOpen} >\r\n                    <ModalHeader >Please Choose Your Assigned Simulation </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Academic Simulation</CardTitle>\r\n                                <CardText>Simulation on a university class environmenH</CardText>\r\n                                <Button color=\"primary\" name=\"academic\" id=\"academic\" onClick={e => this.select_simulation(e)}> Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Management Simulation</CardTitle>\r\n                                <CardText>Simulation on management of employee schedules and project progress</CardText>\r\n                                <Button color=\"info\" name=\"management\" id=\"management\" onClick={e => this.select_simulation(e)}>Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Financing Simulation</CardTitle>\r\n                                <CardText>Simulation family or company financing, involving expenses and incomes</CardText>\r\n                                <Button color=\"primary\" name=\"financing\" id=\"financing\" onClick={e => this.select_simulation(e)}>Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n            {/* </Container> */}\r\n        </Jumbotron>\r\n        </div>\r\n\r\n        <hr />\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Simulation;\r\n",["63","64"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\index.js",[],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Academic.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Financing.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\IvanZzz\\source\\repos\\experimentapp\\src\\components\\Management.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\n// import Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport '../App.css';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText, TabContent, TabPane, ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport classnames from 'classnames';\r\nimport io from \"socket.io-client\";\r\n\r\nconst Utils = require('../utils');\r\nlet utils = new Utils();\r\n\r\nlet schedule_v1_display = [];\r\nlet schedule_v2_display = [];\r\nlet progress_display = [];\r\nlet table_loaded = false;\r\n\r\nlet simulation_type = \"\";\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\nlet schedule_v1_col_headers = [];\r\nlet schedule_v2_col_headers = [];\r\nlet progress_col_headers = [];\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 1 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet socket_id = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nclass Management extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.hotTableComponent1 = React.createRef();\r\n    this.hotTableComponent2 = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      import_page_link: '/result', \r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      isInstructionOpen: true,\r\n      activeTab: '1', \r\n\r\n      redirect_link: \"\", \r\n      isRedirectConfirmOpen: false, \r\n      redirect: false, \r\n\r\n      isRestartModalOpen: false, \r\n      isNameModalOpen: false, \r\n\r\n      isCompleteConfirmationModalOpen: false, \r\n      name: \"\", \r\n      curr_table: \"schedule_v1\"\r\n    }\r\n\r\n    // Socket io stuff =========================================================================================\r\n\r\n    this.socket = io('https://spreadsheetactions.herokuapp.com/');\r\n    // this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    // update current list of online users when a new user joins\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      console.log(\"adding new user\");\r\n      addNewUser(data);\r\n    });\r\n\r\n    // update current list of online users when one user is disconnected\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    // receive updates on spreadsheet from other users\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    // update the last edit message, as well as the entire edit history\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n    \r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data);\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      if (data.simulation === \"management\") {\r\n        this.setState({\r\n          users: data.current_users\r\n        });\r\n        let new_user_text = \"Currently Online: \";\r\n        for (var i = 0; i < this.state.users.length; i++) {\r\n          if (i == this.state.users.length - 1) {\r\n            new_user_text += this.state.users[i]\r\n          } else {\r\n            new_user_text += this.state.users[i] + \", \"\r\n          }\r\n        }\r\n        this.setState({\r\n          user_text_block: new_user_text\r\n        });\r\n      }\r\n    }\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const addMessage = data => {\r\n      console.log(\"the data in addMessage is: \", data);\r\n      let change_table = data.data\r\n      for (var x = 0; x < change_table.length; x++) {\r\n        // Extract data\r\n        let j = change_table[x][0] - 1   // 0 --> y_coord\r\n        let value = change_table[x][1] // 1 --> actual value\r\n        let i = change_table[x][2] - 1 // 2 --> x_coord\r\n        let table = change_table[x][3]; // table corresponds to this change  \r\n\r\n        // reflect each update to its corresponding table\r\n        if (table === \"schedule_v1\") {\r\n            schedule_v1_display[i][j] = value;\r\n        } else if (table === \"schedule_v2\") {\r\n            schedule_v2_display[i][j] = value;\r\n        } else if (table === \"progress_log\") {\r\n            progress_display[i][j] = value;\r\n        }\r\n      }\r\n  };\r\n\r\n    // Socket io stuff =========================================================================================\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleInstructionModal = this.toggleInstructionModal.bind();\r\n    this.toggleRedirectConfirmModal = this.toggleRedirectConfirmModal.bind();\r\n    this.toggleNameModal = this.toggleNameModal.bind();\r\n    this.toggleRestartModal = this.toggleRestartModal.bind();\r\n    this.toggleCompleteConfirmModal = this.toggleCompleteConfirmModal.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    // display_dataset_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.display} >Display Dataset</Button> \r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n\r\n    // FIRST REF =====================================================================================\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // SECOND REF =====================================================================================\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // THIRD REF =====================================================================================\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source === \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleCompleteConfirmModal = () => {\r\n    this.setState({\r\n      isCompleteConfirmationModalOpen: !this.state.isCompleteConfirmationModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRestartModal = () => {\r\n    this.setState({\r\n      isRestartModalOpen: !this.state.isRestartModalOpen\r\n    })\r\n  }\r\n\r\n  toggleNameModal = () => {\r\n    this.setState({\r\n      isNameModalOpen: !this.state.isNameModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRedirectConfirmModal = () => {\r\n    this.setState({\r\n      isRedirectConfirmOpen: !this.state.isRedirectConfirmOpen\r\n    })\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  toggleInstructionModal = () => {\r\n      this.setState({\r\n          isInstructionOpen: !this.state.isInstructionOpen\r\n      })\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n\r\n    // fill in column headers and row headers\r\n    if (data_display.length === 0) {\r\n      data_display.push(col_headers);\r\n    }\r\n    data_display = data_display.concat(buffer_copy) \r\n    console.log(\"data display is: \", data_display);\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      // this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([this.state.name, \"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      temp[3] = this.state.curr_table;\r\n      pending_changes.data.push(temp);\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    });\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    setTimeout(() => {\r\n      user_actions.push([\"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", \"START_TRANSACTION\", ]);\r\n    }, 200);\r\n  }\r\n\r\n  end_transaction = () => {\r\n    this.setState({\r\n      transaction_mode: false\r\n    });\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    setTimeout(() => {\r\n      user_actions.push([\"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\", \"END_TRANSACTION\"]);\r\n      this.commit_transaction();\r\n    }, 500);\r\n  }\r\n\r\n  commit_transaction = () => {\r\n    this.socket.emit('SEND_MESSAGE', pending_changes);\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] === \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][2];\r\n        user_actions.pop();\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration) + prev_idle_time, null, null, this.state.curr_table, null, null, state]);\r\n      } else {\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration), null, null, this.state.curr_table, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] === \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([this.state.name, layout_change_type, change_index, layout_change_direction, null, this.state.curr_table, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type === \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"up_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"down_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type === \"click\") {\r\n\r\n      if (currently_editing) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([this.state.name, \"select_r\", select_i, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([this.state.name, \"select_c\", select_j, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([this.state.name, action_type, select_i, select_j, null, this.state.curr_table, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type === \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key === \"Enter\") {\r\n          user_actions.push([this.state.name, \"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key === \"Tab\") {\r\n          user_actions.push([this.state.name, \"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([this.state.name, \"keyPress\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([this.state.name, \"END_TRAINING_DATA\", null, null, null, this.state.curr_table, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('https://spreadsheetactions.herokuapp.com/training/send-training-data/management', requestOptions);\r\n\r\n    // bring up the confirmation modal\r\n    this.toggleCompleteConfirmModal();\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    // e.preventDefault();\r\n\r\n    if (e.target.name === \"academic\") {\r\n      this.setState({\r\n        redirect_link: '/academic'\r\n      })\r\n    }\r\n    if (e.target.name === \"financing\") {\r\n      this.setState({\r\n        redirect_link: '/financing'\r\n      })\r\n    }\r\n    if (e.target.name === \"management\") {\r\n      this.setState({\r\n        redirect_link: '/management'\r\n      })\r\n    }\r\n    this.toggleRedirectConfirmModal();\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n    if (tab === \"1\") {  \r\n      this.setState({\r\n        curr_table: \"schedule_v1\"\r\n      })\r\n      col_headers = schedule_v1_col_headers;\r\n\r\n    } else if (tab === \"2\") {\r\n      this.setState({\r\n        curr_table: \"schedule_v2\"\r\n      })\r\n      col_headers = schedule_v2_col_headers;\r\n\r\n    } else if (tab === \"3\") {\r\n      this.setState({\r\n        curr_table: \"progress_log\"\r\n      })\r\n      col_headers = progress_col_headers;\r\n    }\r\n  }\r\n\r\n  load_tables = (e) => {\r\n    e.preventDefault();\r\n    if (table_loaded) {\r\n      this.toggleInstructionModal();\r\n    } else {\r\n      table_loaded = true;\r\n      utils.load_simulation_v3(1, \"employee_schedule_v1\", schedule_v1_display, buffer_copy, schedule_v1_col_headers);\r\n      utils.load_simulation_v3(1, \"employee_schedule_v2\", schedule_v2_display, buffer_copy, schedule_v2_col_headers);\r\n      utils.load_simulation_v3(1, \"progress_log\", progress_display, buffer_copy, progress_col_headers);\r\n      setTimeout(() => {\r\n          schedule_v1_display = [schedule_v1_col_headers].concat(schedule_v1_display);\r\n          schedule_v2_display = [schedule_v2_col_headers].concat(schedule_v2_display);\r\n          progress_display = [progress_col_headers].concat(progress_display);\r\n          this.toggleInstructionModal();\r\n      }, 500);\r\n      col_headers = schedule_v1_col_headers;\r\n      this.toggleNameModal();\r\n    }\r\n  }\r\n\r\n  reload_tables = () => {\r\n    utils.load_simulation_v3(1, \"employee_schedule_v1\", schedule_v1_display, buffer_copy, schedule_v1_col_headers);\r\n    utils.load_simulation_v3(1, \"employee_schedule_v2\", schedule_v2_display, buffer_copy, schedule_v2_col_headers);\r\n    utils.load_simulation_v3(1, \"progress_log\", progress_display, buffer_copy, progress_col_headers);\r\n    setTimeout(() => {\r\n        schedule_v1_display = [schedule_v1_col_headers].concat(schedule_v1_display);\r\n        schedule_v2_display = [schedule_v2_col_headers].concat(schedule_v2_display);\r\n        progress_display = [progress_col_headers].concat(progress_display);\r\n    }, 500);\r\n    col_headers = schedule_v1_col_headers;\r\n  }\r\n\r\n  redirect = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n\r\n    // reset all display\r\n    schedule_v1_display = [];\r\n    schedule_v2_display = [];\r\n    progress_display = [];\r\n    schedule_v1_col_headers = [];\r\n    schedule_v2_col_headers = [];\r\n    progress_col_headers = [];\r\n\r\n    // clear recorded actions\r\n    user_actions = [];\r\n    table_loaded = false;\r\n  }\r\n\r\n  onNameSubmit = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submitName = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"state name is: \", this.state.name);\r\n\r\n    let name_package = {\r\n      user_name: this.state.name,\r\n      simulation: \"management\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleNameModal();\r\n  }\r\n\r\n  restart = () => {\r\n    // reset all display\r\n    schedule_v1_display = [];\r\n    schedule_v2_display = [];\r\n    progress_display = [];\r\n    schedule_v1_col_headers = [];\r\n    schedule_v2_col_headers = [];\r\n    progress_col_headers = [];\r\n\r\n    // reload all tables\r\n    this.reload_tables();\r\n\r\n    // clear recorded actions\r\n    user_actions = [];\r\n\r\n    // set tab\r\n    this.setState({\r\n      activeTab: '1'\r\n    })\r\n    this.toggle('1');\r\n\r\n    // toggle restart confirmation\r\n    this.toggleRestartModal();\r\n  }\r\n\r\n  close_confirmation = () => {\r\n    user_actions = []\r\n    this.toggleCompleteConfirmModal();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect_link} />\r\n    }\r\n    return (\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n         <ButtonDropdown isOpen={this.state.collapsed} toggle={this.toggleNavbar} style={{float: 'left'}} className=\"up-margin-one\">\r\n              <DropdownToggle color=\"#61dafb\"  caret style={{float: 'right'}}>\r\n                Change Simulation\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem name=\"academic\" id=\"academic\" onClick={e => this.select_simulation(e)}>Academic Simulation</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem name=\"financing\" id=\"financing\" onClick={e => this.select_simulation(e)}>Financing Simulation</DropdownItem>\r\n              </DropdownMenu>\r\n          </ButtonDropdown>\r\n          </Jumbotron >\r\n          <div>\r\n            <Jumbotron >\r\n                \r\n                  <h1 className=\"display-3\">Hi {this.state.name}, welcome to Management Simulation!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  {this.state.user_text_block}\r\n                  <p className=\"lead\">\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.restart} >Restart Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleInstructionModal} >Instruction</Button>\r\n                  </p>\r\n                  {this.state.edit_message}\r\n\r\n                  <Modal size='lg' isOpen={this.state.isInstructionOpen} >\r\n                    {/* <ModalHeader ><header>Simulation Instruction</header>  </ModalHeader> */}\r\n                    <ModalBody>\r\n                        <h2>Welcome</h2>\r\n                        Welcome to Management Simulation! This instruction can be accessed at any time by clicking the \"Instruction\" button on this webpage. \r\n                        Under this simulation, there are three tables: an \"Employee Schedule\" table, an \"Employee Shifts\" table, and a \"Task List\" table. This simulation has \r\n                        three parts.  \r\n                        <hr className=\"my-2\" />\r\n                        \r\n\r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 1</h2>\r\n                        For Part 1 of this simulation, you are to fill out the \"Employee Schedule\" table based on the descriptions in \"Story 1\" under the \"Story\" section in the \r\n                        instruction document we sent you via email. If you did not receive the document, please contact ninghan2@illinois.edu. Inside the “Employee Schedule” table, \r\n                        the columns “Employee ID” and “Name” refer to the id's and names of the employees, respectively. All the other fields are self-explanatory.\r\n                        <br/>\r\n                        <h5>Note: </h5>\r\n                        When you finish this part, press the “Complete Simulation” button on your screen to submit and start the next part. \r\n                        </p>\r\n                        <hr className=\"my-2\" />\r\n\r\n\r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 2</h2>\r\n                        For part 2 of this simulation, you are to fill out the “Employee Shifts” table based on the descriptions in “Story 2” under the “Story” section in the \r\n                        instruction document we sent you via email. If you did not received the document, please contact ninghan2@illinois.edu. All the fields in the “Employee Shifts” \r\n                        table are quite self-explanatory.   \r\n                        <br/>\r\n                        <h5>Note: </h5>\r\n                        When you finish this part, press the “Complete Simulation” button on your screen to submit and start the next part. \r\n                        </p>\r\n\r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 3</h2>\r\n                        For part 3 of this simulation, you are to fill out the “Task List” table based on the descriptions in “Story 3” under the “Story” section in the \r\n                        instruction document we sent you via email. If you did not received the document, please contact ninghan2@illinois.edu. Inside the “Task List” table, \r\n                        the “Task ID” column is the feature that differentiates each task, and it is your choice to fill in whatever id system you want (E.g. “one”, \r\n                        “two”, … or “001”, “002”…), as long as it is logical. The “Task” column is a description of the task, which you can write in your own words. The \r\n                        “Deadline” column is the deadline of the corresponding task. The “Employee ID” and “Name” columns refer to the employee id and employee name of \r\n                        the employee that is responsible for that task, respectively. The “Hour Spent” column is the approximate hours that the responsible employee has spent \r\n                        on this task. The “Status” column refers to the current progress of the task, which you can also write in your own words, but should be logical. \r\n                        <br/>\r\n                        <h5>Note: </h5>\r\n                        When you finish this part, press the “Complete Simulation” button on your screen to submit. \r\n                        </p>\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size='lg' className='display-button' color=\"info\" onClick={this.load_tables}>Got it!</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRedirectConfirmOpen} toggle={this.toggleRedirectConfirmModal}>\r\n                    <ModalHeader toggle={this.toggleRedirectConfirmModal}>Are you sure you want to leave this page?</ModalHeader>\r\n                    <ModalBody>\r\n                      Note that once you leave this simulation page, you will lose all the records and progress on this simulation. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.redirect}>Confirm</Button> {' '}\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRedirectConfirmModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isNameModalOpen} toggle={this.toggleNameModal}>\r\n                    <ModalHeader toggle={this.toggleNameModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.submitName}>\r\n                        <FormGroup>\r\n                          <Label for=\"user_name\">Enter Full Name</Label>\r\n                          <Input type=\"text\" name=\"name\" id=\"name\" onChange={e => this.onNameSubmit(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Confirm</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRestartModalOpen} toggle={this.toggleRestartModal}>\r\n                    <ModalHeader toggle={this.toggleRestartModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      Your simulation has been restarted. All the changes that haven't been committed yet are clearned. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRestartModal}>Got It</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isCompleteConfirmationModalOpen} toggle={this.toggleCompleteConfirmModal}>\r\n                    <ModalHeader toggle={this.toggleRestartModal}>Complete Confirmation</ModalHeader>\r\n                    <ModalBody>\r\n                      The simulation has been completed and submitted! You can simply close this webpage. If you submitted by mistake or \r\n                      need to report an error, please contact ninghan2@illinois.edu \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' className='display-button' color=\"info\" onClick={this.close_confirmation}>Got It</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                        \r\n            </Jumbotron>\r\n        </div>\r\n        {/* <hr /> */}\r\n\r\n        <Nav tabs>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle('1'); }}>\r\n                    Employee Schedule\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle('2'); }}>\r\n                    Employee Shifts\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '3' })}\r\n                    onClick={() => { this.toggle('3'); }}>\r\n                    Task List\r\n                </NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n                <h4>\r\n                    Employee Schedule Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScrollCapture={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={schedule_v1_display} ref={this.hotTableComponent} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n                <h4>\r\n                    Employee Shifts Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScrollCapture={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={schedule_v2_display} ref={this.hotTableComponent1} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n                <h4>\r\n                    Task List Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScrollCapture={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={progress_display} ref={this.hotTableComponent2} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n        </TabContent>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Management;\r\n",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"233","line":3,"column":40,"nodeType":"231","messageId":"232","endLine":3,"endColumn":50},{"ruleId":"225","replacedBy":"234"},{"ruleId":"227","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":45,"column":62,"nodeType":"238","messageId":"239","endLine":45,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"240","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"241","line":6,"column":3,"nodeType":"231","messageId":"232","endLine":6,"endColumn":11},{"ruleId":"229","severity":1,"message":"242","line":7,"column":3,"nodeType":"231","messageId":"232","endLine":7,"endColumn":9},{"ruleId":"229","severity":1,"message":"243","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":16},{"ruleId":"229","severity":1,"message":"244","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":14},{"ruleId":"229","severity":1,"message":"245","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":12},{"ruleId":"229","severity":1,"message":"246","line":14,"column":3,"nodeType":"231","messageId":"232","endLine":14,"endColumn":6},{"ruleId":"229","severity":1,"message":"247","line":15,"column":3,"nodeType":"231","messageId":"232","endLine":15,"endColumn":10},{"ruleId":"229","severity":1,"message":"248","line":16,"column":3,"nodeType":"231","messageId":"232","endLine":16,"endColumn":10},{"ruleId":"229","severity":1,"message":"249","line":18,"column":3,"nodeType":"231","messageId":"232","endLine":18,"endColumn":8},{"ruleId":"229","severity":1,"message":"250","line":18,"column":85,"nodeType":"231","messageId":"232","endLine":18,"endColumn":94},{"ruleId":"229","severity":1,"message":"251","line":21,"column":20,"nodeType":"231","messageId":"232","endLine":21,"endColumn":26},{"ruleId":"229","severity":1,"message":"252","line":22,"column":3,"nodeType":"231","messageId":"232","endLine":22,"endColumn":8},{"ruleId":"229","severity":1,"message":"253","line":23,"column":3,"nodeType":"231","messageId":"232","endLine":23,"endColumn":7},{"ruleId":"225","replacedBy":"254"},{"ruleId":"227","replacedBy":"255"},{"ruleId":"229","severity":1,"message":"230","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"240","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"241","line":7,"column":3,"nodeType":"231","messageId":"232","endLine":7,"endColumn":11},{"ruleId":"229","severity":1,"message":"242","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":9},{"ruleId":"229","severity":1,"message":"243","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":16},{"ruleId":"229","severity":1,"message":"244","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":14},{"ruleId":"229","severity":1,"message":"245","line":11,"column":3,"nodeType":"231","messageId":"232","endLine":11,"endColumn":12},{"ruleId":"229","severity":1,"message":"256","line":12,"column":3,"nodeType":"231","messageId":"232","endLine":12,"endColumn":6},{"ruleId":"229","severity":1,"message":"257","line":13,"column":3,"nodeType":"231","messageId":"232","endLine":13,"endColumn":6},{"ruleId":"229","severity":1,"message":"250","line":19,"column":85,"nodeType":"231","messageId":"232","endLine":19,"endColumn":94},{"ruleId":"229","severity":1,"message":"258","line":19,"column":96,"nodeType":"231","messageId":"232","endLine":19,"endColumn":100},{"ruleId":"229","severity":1,"message":"259","line":19,"column":102,"nodeType":"231","messageId":"232","endLine":19,"endColumn":111},{"ruleId":"229","severity":1,"message":"260","line":19,"column":113,"nodeType":"231","messageId":"232","endLine":19,"endColumn":121},{"ruleId":"229","severity":1,"message":"261","line":19,"column":144,"nodeType":"231","messageId":"232","endLine":19,"endColumn":158},{"ruleId":"229","severity":1,"message":"262","line":19,"column":160,"nodeType":"231","messageId":"232","endLine":19,"endColumn":168},{"ruleId":"229","severity":1,"message":"263","line":19,"column":170,"nodeType":"231","messageId":"232","endLine":19,"endColumn":184},{"ruleId":"229","severity":1,"message":"264","line":19,"column":186,"nodeType":"231","messageId":"232","endLine":19,"endColumn":198},{"ruleId":"229","severity":1,"message":"265","line":19,"column":200,"nodeType":"231","messageId":"232","endLine":19,"endColumn":212},{"ruleId":"229","severity":1,"message":"266","line":19,"column":214,"nodeType":"231","messageId":"232","endLine":19,"endColumn":233},{"ruleId":"229","severity":1,"message":"251","line":22,"column":20,"nodeType":"231","messageId":"232","endLine":22,"endColumn":26},{"ruleId":"229","severity":1,"message":"252","line":23,"column":3,"nodeType":"231","messageId":"232","endLine":23,"endColumn":8},{"ruleId":"229","severity":1,"message":"253","line":24,"column":3,"nodeType":"231","messageId":"232","endLine":24,"endColumn":7},{"ruleId":"229","severity":1,"message":"267","line":25,"column":3,"nodeType":"231","messageId":"232","endLine":25,"endColumn":13},{"ruleId":"229","severity":1,"message":"268","line":37,"column":5,"nodeType":"231","messageId":"232","endLine":37,"endColumn":27},{"ruleId":"229","severity":1,"message":"269","line":54,"column":5,"nodeType":"231","messageId":"232","endLine":54,"endColumn":31},{"ruleId":"229","severity":1,"message":"270","line":62,"column":5,"nodeType":"231","messageId":"232","endLine":62,"endColumn":16},{"ruleId":"229","severity":1,"message":"271","line":64,"column":5,"nodeType":"231","messageId":"232","endLine":64,"endColumn":27},{"ruleId":"229","severity":1,"message":"272","line":66,"column":5,"nodeType":"231","messageId":"232","endLine":66,"endColumn":9},{"ruleId":"229","severity":1,"message":"273","line":66,"column":17,"nodeType":"231","messageId":"232","endLine":66,"endColumn":23},{"ruleId":"229","severity":1,"message":"274","line":66,"column":30,"nodeType":"231","messageId":"232","endLine":66,"endColumn":41},{"ruleId":"229","severity":1,"message":"275","line":68,"column":5,"nodeType":"231","messageId":"232","endLine":68,"endColumn":17},{"ruleId":"229","severity":1,"message":"276","line":69,"column":5,"nodeType":"231","messageId":"232","endLine":69,"endColumn":12},{"ruleId":"229","severity":1,"message":"277","line":71,"column":5,"nodeType":"231","messageId":"232","endLine":71,"endColumn":17},{"ruleId":"229","severity":1,"message":"278","line":75,"column":5,"nodeType":"231","messageId":"232","endLine":75,"endColumn":24},{"ruleId":"229","severity":1,"message":"279","line":76,"column":5,"nodeType":"231","messageId":"232","endLine":76,"endColumn":13},{"ruleId":"280","severity":1,"message":"281","line":202,"column":17,"nodeType":"238","messageId":"282","endLine":202,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":276,"column":22,"nodeType":"231","messageId":"285","endLine":276,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":283,"column":22,"nodeType":"231","messageId":"285","endLine":283,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":290,"column":22,"nodeType":"231","messageId":"285","endLine":290,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":297,"column":22,"nodeType":"231","messageId":"285","endLine":297,"endColumn":23},{"ruleId":"229","severity":1,"message":"286","line":1019,"column":7,"nodeType":"231","messageId":"232","endLine":1019,"endColumn":16},{"ruleId":"229","severity":1,"message":"287","line":1020,"column":7,"nodeType":"231","messageId":"232","endLine":1020,"endColumn":16},{"ruleId":"229","severity":1,"message":"288","line":1151,"column":5,"nodeType":"231","messageId":"232","endLine":1151,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1233,"column":18,"nodeType":"231","messageId":"285","endLine":1233,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1278,"column":18,"nodeType":"231","messageId":"285","endLine":1278,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1322,"column":18,"nodeType":"231","messageId":"285","endLine":1322,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1361,"column":18,"nodeType":"231","messageId":"285","endLine":1361,"endColumn":19},{"ruleId":"229","severity":1,"message":"290","line":1372,"column":13,"nodeType":"231","messageId":"232","endLine":1372,"endColumn":27},{"ruleId":"229","severity":1,"message":"291","line":1438,"column":13,"nodeType":"231","messageId":"232","endLine":1438,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":1853,"column":26,"nodeType":"238","messageId":"282","endLine":1853,"endColumn":28},{"ruleId":"280","severity":1,"message":"281","line":1853,"column":54,"nodeType":"238","messageId":"282","endLine":1853,"endColumn":56},{"ruleId":"280","severity":1,"message":"281","line":1853,"column":84,"nodeType":"238","messageId":"282","endLine":1853,"endColumn":86},{"ruleId":"292","severity":1,"message":"293","line":2065,"column":131,"nodeType":"294","endLine":2065,"endColumn":143},{"ruleId":"292","severity":1,"message":"293","line":2084,"column":132,"nodeType":"294","endLine":2084,"endColumn":144},{"ruleId":"292","severity":1,"message":"293","line":2103,"column":130,"nodeType":"294","endLine":2103,"endColumn":142},{"ruleId":"292","severity":1,"message":"293","line":2122,"column":133,"nodeType":"294","endLine":2122,"endColumn":145},{"ruleId":"292","severity":1,"message":"293","line":2141,"column":135,"nodeType":"294","endLine":2141,"endColumn":147},{"ruleId":"229","severity":1,"message":"230","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"240","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"242","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":9},{"ruleId":"229","severity":1,"message":"256","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":6},{"ruleId":"229","severity":1,"message":"257","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":6},{"ruleId":"229","severity":1,"message":"261","line":16,"column":99,"nodeType":"231","messageId":"232","endLine":16,"endColumn":113},{"ruleId":"229","severity":1,"message":"262","line":16,"column":115,"nodeType":"231","messageId":"232","endLine":16,"endColumn":123},{"ruleId":"229","severity":1,"message":"263","line":16,"column":125,"nodeType":"231","messageId":"232","endLine":16,"endColumn":139},{"ruleId":"229","severity":1,"message":"264","line":16,"column":141,"nodeType":"231","messageId":"232","endLine":16,"endColumn":153},{"ruleId":"229","severity":1,"message":"265","line":16,"column":155,"nodeType":"231","messageId":"232","endLine":16,"endColumn":167},{"ruleId":"229","severity":1,"message":"251","line":19,"column":20,"nodeType":"231","messageId":"232","endLine":19,"endColumn":26},{"ruleId":"229","severity":1,"message":"252","line":20,"column":3,"nodeType":"231","messageId":"232","endLine":20,"endColumn":8},{"ruleId":"229","severity":1,"message":"253","line":21,"column":3,"nodeType":"231","messageId":"232","endLine":21,"endColumn":7},{"ruleId":"229","severity":1,"message":"295","line":22,"column":3,"nodeType":"231","messageId":"232","endLine":22,"endColumn":11},{"ruleId":"229","severity":1,"message":"296","line":31,"column":5,"nodeType":"231","messageId":"232","endLine":31,"endColumn":27},{"ruleId":"229","severity":1,"message":"297","line":38,"column":5,"nodeType":"231","messageId":"232","endLine":38,"endColumn":20},{"ruleId":"229","severity":1,"message":"298","line":51,"column":5,"nodeType":"231","messageId":"232","endLine":51,"endColumn":31},{"ruleId":"229","severity":1,"message":"270","line":59,"column":5,"nodeType":"231","messageId":"232","endLine":59,"endColumn":16},{"ruleId":"229","severity":1,"message":"272","line":61,"column":5,"nodeType":"231","messageId":"232","endLine":61,"endColumn":9},{"ruleId":"229","severity":1,"message":"299","line":61,"column":16,"nodeType":"231","messageId":"232","endLine":61,"endColumn":26},{"ruleId":"229","severity":1,"message":"300","line":61,"column":33,"nodeType":"231","messageId":"232","endLine":61,"endColumn":40},{"ruleId":"229","severity":1,"message":"273","line":61,"column":47,"nodeType":"231","messageId":"232","endLine":61,"endColumn":53},{"ruleId":"229","severity":1,"message":"274","line":61,"column":60,"nodeType":"231","messageId":"232","endLine":61,"endColumn":71},{"ruleId":"229","severity":1,"message":"301","line":63,"column":5,"nodeType":"231","messageId":"232","endLine":63,"endColumn":18},{"ruleId":"229","severity":1,"message":"302","line":64,"column":5,"nodeType":"231","messageId":"232","endLine":64,"endColumn":11},{"ruleId":"229","severity":1,"message":"276","line":65,"column":5,"nodeType":"231","messageId":"232","endLine":65,"endColumn":12},{"ruleId":"229","severity":1,"message":"277","line":67,"column":5,"nodeType":"231","messageId":"232","endLine":67,"endColumn":17},{"ruleId":"229","severity":1,"message":"278","line":71,"column":5,"nodeType":"231","messageId":"232","endLine":71,"endColumn":24},{"ruleId":"229","severity":1,"message":"279","line":72,"column":5,"nodeType":"231","messageId":"232","endLine":72,"endColumn":13},{"ruleId":"229","severity":1,"message":"303","line":78,"column":5,"nodeType":"231","messageId":"232","endLine":78,"endColumn":15},{"ruleId":"229","severity":1,"message":"304","line":79,"column":5,"nodeType":"231","messageId":"232","endLine":79,"endColumn":15},{"ruleId":"229","severity":1,"message":"305","line":80,"column":5,"nodeType":"231","messageId":"232","endLine":80,"endColumn":19},{"ruleId":"229","severity":1,"message":"306","line":81,"column":5,"nodeType":"231","messageId":"232","endLine":81,"endColumn":21},{"ruleId":"229","severity":1,"message":"307","line":87,"column":5,"nodeType":"231","messageId":"232","endLine":87,"endColumn":32},{"ruleId":"229","severity":1,"message":"271","line":88,"column":5,"nodeType":"231","messageId":"232","endLine":88,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":205,"column":17,"nodeType":"238","messageId":"282","endLine":205,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":278,"column":22,"nodeType":"231","messageId":"285","endLine":278,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":285,"column":22,"nodeType":"231","messageId":"285","endLine":285,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":292,"column":22,"nodeType":"231","messageId":"285","endLine":292,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":299,"column":22,"nodeType":"231","messageId":"285","endLine":299,"endColumn":23},{"ruleId":"229","severity":1,"message":"286","line":814,"column":7,"nodeType":"231","messageId":"232","endLine":814,"endColumn":16},{"ruleId":"229","severity":1,"message":"287","line":815,"column":7,"nodeType":"231","messageId":"232","endLine":815,"endColumn":16},{"ruleId":"229","severity":1,"message":"288","line":940,"column":5,"nodeType":"231","messageId":"232","endLine":940,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1022,"column":18,"nodeType":"231","messageId":"285","endLine":1022,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1067,"column":18,"nodeType":"231","messageId":"285","endLine":1067,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1112,"column":18,"nodeType":"231","messageId":"285","endLine":1112,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":1150,"column":18,"nodeType":"231","messageId":"285","endLine":1150,"endColumn":19},{"ruleId":"229","severity":1,"message":"291","line":1226,"column":13,"nodeType":"231","messageId":"232","endLine":1226,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":1640,"column":26,"nodeType":"238","messageId":"282","endLine":1640,"endColumn":28},{"ruleId":"280","severity":1,"message":"281","line":1640,"column":54,"nodeType":"238","messageId":"282","endLine":1640,"endColumn":56},{"ruleId":"280","severity":1,"message":"281","line":1640,"column":84,"nodeType":"238","messageId":"282","endLine":1640,"endColumn":86},{"ruleId":"292","severity":1,"message":"293","line":1823,"column":136,"nodeType":"294","endLine":1823,"endColumn":148},{"ruleId":"292","severity":1,"message":"293","line":1842,"column":132,"nodeType":"294","endLine":1842,"endColumn":144},{"ruleId":"292","severity":1,"message":"293","line":1861,"column":133,"nodeType":"294","endLine":1861,"endColumn":145},{"ruleId":"292","severity":1,"message":"293","line":1880,"column":133,"nodeType":"294","endLine":1880,"endColumn":145},{"ruleId":"292","severity":1,"message":"293","line":1899,"column":131,"nodeType":"294","endLine":1899,"endColumn":143},{"ruleId":"229","severity":1,"message":"230","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"240","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"241","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":11},{"ruleId":"229","severity":1,"message":"242","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":9},{"ruleId":"229","severity":1,"message":"243","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":16},{"ruleId":"229","severity":1,"message":"244","line":11,"column":3,"nodeType":"231","messageId":"232","endLine":11,"endColumn":14},{"ruleId":"229","severity":1,"message":"245","line":12,"column":3,"nodeType":"231","messageId":"232","endLine":12,"endColumn":12},{"ruleId":"229","severity":1,"message":"256","line":13,"column":3,"nodeType":"231","messageId":"232","endLine":13,"endColumn":6},{"ruleId":"229","severity":1,"message":"257","line":14,"column":3,"nodeType":"231","messageId":"232","endLine":14,"endColumn":6},{"ruleId":"229","severity":1,"message":"249","line":20,"column":3,"nodeType":"231","messageId":"232","endLine":20,"endColumn":8},{"ruleId":"229","severity":1,"message":"250","line":20,"column":85,"nodeType":"231","messageId":"232","endLine":20,"endColumn":94},{"ruleId":"229","severity":1,"message":"258","line":20,"column":96,"nodeType":"231","messageId":"232","endLine":20,"endColumn":100},{"ruleId":"229","severity":1,"message":"259","line":20,"column":102,"nodeType":"231","messageId":"232","endLine":20,"endColumn":111},{"ruleId":"229","severity":1,"message":"260","line":20,"column":113,"nodeType":"231","messageId":"232","endLine":20,"endColumn":121},{"ruleId":"229","severity":1,"message":"262","line":20,"column":160,"nodeType":"231","messageId":"232","endLine":20,"endColumn":168},{"ruleId":"229","severity":1,"message":"251","line":23,"column":20,"nodeType":"231","messageId":"232","endLine":23,"endColumn":26},{"ruleId":"229","severity":1,"message":"252","line":24,"column":3,"nodeType":"231","messageId":"232","endLine":24,"endColumn":8},{"ruleId":"229","severity":1,"message":"253","line":25,"column":3,"nodeType":"231","messageId":"232","endLine":25,"endColumn":7},{"ruleId":"229","severity":1,"message":"267","line":26,"column":3,"nodeType":"231","messageId":"232","endLine":26,"endColumn":13},{"ruleId":"229","severity":1,"message":"297","line":40,"column":5,"nodeType":"231","messageId":"232","endLine":40,"endColumn":20},{"ruleId":"229","severity":1,"message":"272","line":58,"column":5,"nodeType":"231","messageId":"232","endLine":58,"endColumn":9},{"ruleId":"229","severity":1,"message":"299","line":58,"column":16,"nodeType":"231","messageId":"232","endLine":58,"endColumn":26},{"ruleId":"229","severity":1,"message":"300","line":58,"column":33,"nodeType":"231","messageId":"232","endLine":58,"endColumn":40},{"ruleId":"229","severity":1,"message":"301","line":59,"column":5,"nodeType":"231","messageId":"232","endLine":59,"endColumn":18},{"ruleId":"229","severity":1,"message":"302","line":60,"column":5,"nodeType":"231","messageId":"232","endLine":60,"endColumn":11},{"ruleId":"229","severity":1,"message":"276","line":61,"column":5,"nodeType":"231","messageId":"232","endLine":61,"endColumn":12},{"ruleId":"229","severity":1,"message":"278","line":67,"column":5,"nodeType":"231","messageId":"232","endLine":67,"endColumn":24},{"ruleId":"229","severity":1,"message":"279","line":68,"column":5,"nodeType":"231","messageId":"232","endLine":68,"endColumn":13},{"ruleId":"229","severity":1,"message":"303","line":74,"column":5,"nodeType":"231","messageId":"232","endLine":74,"endColumn":15},{"ruleId":"229","severity":1,"message":"304","line":75,"column":5,"nodeType":"231","messageId":"232","endLine":75,"endColumn":15},{"ruleId":"229","severity":1,"message":"305","line":76,"column":5,"nodeType":"231","messageId":"232","endLine":76,"endColumn":19},{"ruleId":"229","severity":1,"message":"306","line":77,"column":5,"nodeType":"231","messageId":"232","endLine":77,"endColumn":21},{"ruleId":"229","severity":1,"message":"307","line":83,"column":5,"nodeType":"231","messageId":"232","endLine":83,"endColumn":32},{"ruleId":"229","severity":1,"message":"308","line":180,"column":7,"nodeType":"231","messageId":"232","endLine":180,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":197,"column":17,"nodeType":"238","messageId":"282","endLine":197,"endColumn":19},{"ruleId":"229","severity":1,"message":"286","line":409,"column":7,"nodeType":"231","messageId":"232","endLine":409,"endColumn":16},{"ruleId":"229","severity":1,"message":"287","line":410,"column":7,"nodeType":"231","messageId":"232","endLine":410,"endColumn":16},{"ruleId":"229","severity":1,"message":"271","line":501,"column":5,"nodeType":"231","messageId":"232","endLine":501,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":651,"column":20,"nodeType":"231","messageId":"285","endLine":651,"endColumn":21},{"ruleId":"283","severity":1,"message":"284","line":659,"column":22,"nodeType":"231","messageId":"285","endLine":659,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":684,"column":20,"nodeType":"231","messageId":"285","endLine":684,"endColumn":21},{"ruleId":"283","severity":1,"message":"284","line":692,"column":22,"nodeType":"231","messageId":"285","endLine":692,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":1088,"column":132,"nodeType":"294","endLine":1088,"endColumn":144},{"ruleId":"292","severity":1,"message":"293","line":1107,"column":133,"nodeType":"294","endLine":1107,"endColumn":145},{"ruleId":"292","severity":1,"message":"293","line":1126,"column":130,"nodeType":"294","endLine":1126,"endColumn":142},{"ruleId":"225","replacedBy":"309"},{"ruleId":"227","replacedBy":"310"},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.",["311"],["312"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ReactDOM' is defined but never used.","'Collapse' is defined but never used.","'Navbar' is defined but never used.","'NavbarToggler' is defined but never used.","'NavbarBrand' is defined but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Table' is defined but never used.","'ListGroup' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["311"],["312"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'ButtonDropdown' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'useHistory' is defined but never used.","'student_status_display' is assigned a value but never used.","'student_status_col_headers' is assigned a value but never used.","'SCROLL_SIZE' is assigned a value but never used.","'display_dataset_button' is assigned a value but never used.","'data' is assigned a value but never used.","'buffer' is assigned a value but never used.","'buffer_copy' is assigned a value but never used.","'name_entered' is assigned a value but never used.","'ATT_NUM' is assigned a value but never used.","'data_display' is assigned a value but never used.","'current_fetch_index' is assigned a value but never used.","'num_attr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-redeclare","'i' is already defined.","redeclared","'current_i' is assigned a value but never used.","'current_j' is assigned a value but never used.","'prev_scrolltop' is assigned a value but never used.","'j' is already defined.","'search_key_idx' is assigned a value but never used.","'requestOptions' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'monthly_income_display' is assigned a value but never used.","'simulation_type' is assigned a value but never used.","'monthly_income_col_headers' is assigned a value but never used.","'dataMatrix' is assigned a value but never used.","'columns' is assigned a value but never used.","'PREFETCH_SIZE' is assigned a value but never used.","'noData' is assigned a value but never used.","'conflict_i' is assigned a value but never used.","'conflict_j' is assigned a value but never used.","'incoming_value' is assigned a value but never used.","'conflict_message' is assigned a value but never used.","'apply_read_only_lock_button' is assigned a value but never used.","'socket_id' is assigned a value but never used.",["311"],["312"],"no-global-assign","no-unsafe-negation"]